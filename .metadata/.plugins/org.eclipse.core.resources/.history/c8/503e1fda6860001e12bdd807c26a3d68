package com.todo.assignment.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.todo.assignment.entities.Todo;
import com.todo.assignment.service.TodoService;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.websocket.server.PathParam;

@RestController
@CrossOrigin(origins = "http://localhost:4200/")
public class TodosController {
	
	@Autowired
	TodoService ts;
	
	@PostMapping("/user/add/todo")
	@PreAuthorize("hasAuthority('ROLE_USER')")
	void addTodo(@RequestBody Todo todo,HttpServletRequest request) {
		String username=request.getUserPrincipal().getName();
		ts.addTodo(todo, username);
	}
	
	@PreAuthorize("hasAuthority('ROLE_USER')")
	@GetMapping("/user/todos")
	List<Todo> getTodos(HttpServletRequest request) {
		String username=request.getUserPrincipal().getName();
		return ts.getTodos(username);
	}

	@PreAuthorize("hasAuthority('ROLE_USER')")
	@PutMapping("/user/update/{todoId}")
	void updateTodo(@PathVariable int todoId,@RequestBody Todo todo) {
		ts.editTodo(todoId, todo);
	}
	
	@PreAuthorize("hasAuthority('ROLE_USER')")
	@DeleteMapping("/user/delete/{taskId}")
	void delete(@PathVariable int taskId) {
		System.out.println(todoId);
		ts.deleteTodo(todoId);
	}
	@PreAuthorize("hasAuthority('ROLE_USER')")
	@PutMapping("/user/change/{todoId}")
	void markCompleted(@PathVariable int todoId) {
		ts.updateCompleted(todoId);
	}
	
}
